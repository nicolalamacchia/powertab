# vim: set ts=2 sw=2:

name: Upload Release Asset

on:
  push:
    branches:
      - master
    # tags:
    #   '[0-9]+' # matches Epoch timestamps

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: npm install, build
        run: |
          npm ci
          npm run build
        env:
          CI: true
      - name: Build project
        run: |
          zip --recurse-paths ../powertab .
        working-directory: ./dist
      - name: Get timestamp
        id: get_timestamp
        run: |
          echo ::set-output name=ts::"$(date +%s)"
      # - name: Get tag
      #   env:
      #     GITHUB_REF: ${{ github.ref }}
      #   id: get_tag
      #   run: echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # tag_name: ${{ steps.get_tag.outputs.tag }}
          # release_name: Release at ${{ steps.get_tag.outputs.tag }}
          tag_name: ${{ steps.get_timestamp.outputs.ts }}
          release_name: Release ${{ steps.get_timestamp.outputs.ts }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./powertab.zip
          asset_name: powertab.zip
          asset_content_type: application/zip
      - name: Notify
        run: |
          # curl --head https://nicola.link/ci-update/powertab/${{ steps.get_timestamp.outputs.ts }}
          curl --fail -X POST \
            --data-urlencode "token=${{ secrets.RELEASE_TOKEN }}" \
            --data-urlencode "app=powertab" \
            --data-urlencode "ts=${{ steps.get_timestamp.outputs.ts }}" \
            -H "Content-Type: application/x-www-form-urlencoded" \
            https://nicola.link/ci-update
      - name: Cleanup on Failure
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/nicolalamacchia/powertab.git
          git push --delete origin ${{ steps.get_timestamp.outputs.ts }}
